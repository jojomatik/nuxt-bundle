name: Build template and deploy to vercel
on: push

jobs:
  yarn_build:
    name: Build template
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: 
          repository: jojomatik/nuxt-3-base
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Cache node modules
        uses: actions/cache@v3
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
      - name: Install correct version of nuxt-bundle
        run: yarn add ${{ github.repository }}#${{ github.ref }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Lint
        run: yarn lint

  vercel_deploy:        
    name: Deploy template
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: 
          repository: jojomatik/nuxt-3-base
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Cache node modules
        uses: actions/cache@v3
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
      - name: Install correct version of nuxt-bundle
        run: yarn add ${{ github.repository }}#${{ github.ref }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          NITRO_PRESET: vercel
          NUXT_IMAGE_PROVIDER: vercel
      - name: Deploy Project Artifacts to Vercel (Preview)
        if: github.ref != 'refs/heads/main'
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel (Prod)
        if: github.ref == 'refs/heads/main'
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

